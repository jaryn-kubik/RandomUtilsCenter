@page "/watcher"
@inject ConfigService _config
@inject HtmlWatcherService _service

<div class="d-flex w-100 justify-content-end align-items-center mb-1">
	<input type="number" min="0" max="60" step="0.1" @bind="_config.HtmlWatcherInterval" />
	<button class="btn btn-primary ml-5" @onclick="OnAdd">Add</button>
	<button class="btn btn-primary ml-2" @onclick="OnSave">Save</button>
</div>

<table class="table">
	<tr>
		<th>Name</th>
		<th>Url</th>
		<th>Selector</th>
		<th></th>
	</tr>
	@foreach (var watcher in _config.HtmlWatcher)
	{
		<tr>
			<td class="w-25">
				<input type="text" class="w-100 form-control" @bind="watcher.Name" />
			</td>
			<td class="w-25">
				<input type="text" class="w-100 form-control" @bind="watcher.Url" />
			</td>
			<td class="w-50">
				<input type="text" class="w-100 form-control" @bind="watcher.Selector" />
			</td>
			<td class="py-0 align-middle text-nowrap">
				@if (watcher.Enabled)
				{
					<button class="btn btn-success" @onclick="() => watcher.Enabled = false">
						<i class="fas fa-toggle-on fa-fw fa-lg"></i>
					</button>
				}
				else
				{
					<button class="btn btn-warning" @onclick="() => watcher.Enabled = true">
						<i class="fas fa-toggle-off fa-fw fa-lg"></i>
					</button>
				}
				<button class="btn btn-outline-danger ml-1" @onclick="() => OnRemove(watcher)">
					<i class="fas fa-trash fa-fw fa-lg"></i>
				</button>
				<button class="btn btn-outline-primary ml-1" @onclick="() => _service.GetAsync(watcher, true)">
					<i class="fas fa-info fa-fw fa-lg"></i>
				</button>
			</td>
		</tr>
	}
</table>

@code
{
	private void OnAdd()
	{
		_config.HtmlWatcher.Add(new ConfigService.HtmlWatcherConfig());
	}

	private void OnSave()
	{
		_config.Save();
		_service.OnIntervalChanged();
	}

	private void OnRemove(ConfigService.HtmlWatcherConfig watcher)
	{
		_config.HtmlWatcher.Remove(watcher);
	}
}